# Generated by Django 4.2.10 on 2025-05-23 20:38

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EmailNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipient_email', models.EmailField(max_length=254)),
                ('subject', models.CharField(max_length=200)),
                ('html_content', models.TextField()),
                ('text_content', models.TextField(blank=True)),
                ('context_data', models.JSONField(default=dict)),
                ('status', models.CharField(choices=[('pending', 'Pendiente'), ('sent', 'Enviado'), ('failed', 'Error'), ('bounced', 'Rebotado'), ('opened', 'Abierto'), ('clicked', 'Click Realizado')], default='pending', max_length=20)),
                ('error_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('opened_at', models.DateTimeField(blank=True, null=True)),
                ('clicked_at', models.DateTimeField(blank=True, null=True)),
                ('email_provider_id', models.CharField(blank=True, help_text='ID del proveedor de email', max_length=100)),
                ('retry_count', models.IntegerField(default=0)),
                ('max_retries', models.IntegerField(default=3)),
            ],
            options={
                'verbose_name': 'Notificación por Email',
                'verbose_name_plural': 'Notificaciones por Email',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='NotificationType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(choices=[('welcome', 'Bienvenida'), ('registration_confirmation', 'Confirmación de Registro'), ('financing_application', 'Solicitud de Financiamiento'), ('application_approved', 'Solicitud Aprobada'), ('application_rejected', 'Solicitud Rechazada'), ('application_pending', 'Solicitud Pendiente'), ('payment_reminder', 'Recordatorio de Pago'), ('payment_confirmation', 'Confirmación de Pago'), ('document_request', 'Solicitud de Documentos'), ('newsletter', 'Boletín Informativo'), ('promotion', 'Promoción Especial'), ('system_maintenance', 'Mantenimiento del Sistema')], max_length=50, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Tipo de Notificación',
                'verbose_name_plural': 'Tipos de Notificaciones',
            },
        ),
        migrations.CreateModel(
            name='UserNotificationPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('welcome_enabled', models.BooleanField(default=True)),
                ('registration_confirmation_enabled', models.BooleanField(default=True)),
                ('financing_application_enabled', models.BooleanField(default=True)),
                ('application_approved_enabled', models.BooleanField(default=True)),
                ('application_rejected_enabled', models.BooleanField(default=True)),
                ('application_pending_enabled', models.BooleanField(default=True)),
                ('payment_reminder_enabled', models.BooleanField(default=True)),
                ('payment_confirmation_enabled', models.BooleanField(default=True)),
                ('document_request_enabled', models.BooleanField(default=True)),
                ('newsletter_enabled', models.BooleanField(default=True)),
                ('promotion_enabled', models.BooleanField(default=True)),
                ('system_maintenance_enabled', models.BooleanField(default=True)),
                ('email_notifications_enabled', models.BooleanField(default=True)),
                ('frequency', models.CharField(choices=[('immediate', 'Inmediato'), ('daily', 'Diario'), ('weekly', 'Semanal')], default='immediate', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='notification_preferences', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Preferencia de Notificación',
                'verbose_name_plural': 'Preferencias de Notificaciones',
            },
        ),
        migrations.CreateModel(
            name='EmailTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(help_text='Asunto del email', max_length=200)),
                ('html_content', models.TextField(help_text='Contenido HTML del email')),
                ('text_content', models.TextField(blank=True, help_text='Contenido en texto plano (opcional)')),
                ('available_variables', models.JSONField(default=dict, help_text='Variables disponibles para usar en la plantilla (JSON)')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('notification_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notifications.notificationtype')),
            ],
            options={
                'verbose_name': 'Plantilla de Email',
                'verbose_name_plural': 'Plantillas de Email',
            },
        ),
        migrations.CreateModel(
            name='EmailQueue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('priority', models.CharField(choices=[('high', 'Alta'), ('normal', 'Normal'), ('low', 'Baja')], default='normal', max_length=10)),
                ('scheduled_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('processing_started_at', models.DateTimeField(blank=True, null=True)),
                ('is_processed', models.BooleanField(default=False)),
                ('email_notification', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='notifications.emailnotification')),
            ],
            options={
                'verbose_name': 'Cola de Email',
                'verbose_name_plural': 'Cola de Emails',
                'ordering': ['priority', 'scheduled_at'],
            },
        ),
        migrations.AddField(
            model_name='emailnotification',
            name='email_template',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='notifications.emailtemplate'),
        ),
        migrations.AddField(
            model_name='emailnotification',
            name='notification_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notifications.notificationtype'),
        ),
        migrations.AddField(
            model_name='emailnotification',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='email_notifications', to=settings.AUTH_USER_MODEL),
        ),
    ]
